generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  name      String   @db.VarChar(255)
  role      String   @db.VarChar(20)
  googleId  String?  @db.VarChar(200)
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt @db.DateTime(0)
  cart      Cart?
  orders    Orders[]

  @@map("User")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  description String?     @db.Text
  price       Decimal     @db.Decimal(10, 2)
  stock       Int
  image       String?     @db.VarChar(255)
  destination String?     @db.VarChar(255)
  createdAt   DateTime    @default(now()) @db.DateTime(0)
  updatedAt   DateTime    @default(now()) @updatedAt @db.DateTime(0)
  cartItems   CartItem[]
  orderItems  OrderItem[]

  @@map("Product")
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  createdAt DateTime   @default(now()) @db.DateTime(0)
  updatedAt DateTime   @default(now()) @updatedAt @db.DateTime(0)
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]

  @@map("Cart")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt @db.DateTime(0)
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([cartId, productId], name: "unique_cart_product")
  @@map("CartItem")
}

model OrderStatus {
  id     Int      @id @db.TinyInt
  name   String   @db.VarChar(50)
  orders Orders[]

  @@map("OrderStatus")
}

model Orders {
  id          Int          @id @default(autoincrement())
  userId      Int
  total       Decimal      @db.Decimal(10, 2)
  status      Int          @default(0) @db.TinyInt
  createdAt   DateTime     @default(now()) @db.DateTime(0)
  updatedAt   DateTime     @default(now()) @updatedAt @db.DateTime(0)
  user        User         @relation(fields: [userId], references: [id])
  orderStatus OrderStatus? @relation(fields: [status], references: [id])
  items       OrderItem[]

  @@map("Orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt @db.DateTime(0)
  order     Orders   @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("OrderItem")
}
